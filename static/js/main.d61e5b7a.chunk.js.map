{"version":3,"sources":["FileToolbar.js","EnhancedTableHead.js","Files.js","Actions.js","Layout.js","App.js","serviceWorker.js","index.js"],"names":["useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","props","classes","numSelected","filepath","setFilepath","removeSelectedItems","updatePath","idx","length","slice","react_default","a","createElement","Toolbar","className","clsx","Object","defineProperty","Typography","variant","id","onClick","map","name","key","Tooltip","IconButton","aria-label","Delete_default","headRows","label","EnhancedTableHead","onSelectAllClick","order","orderBy","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","row","sortDirection","TableSortLabel","active","direction","property","event","desc","b","useStyles","width","paper","marginBottom","table","minWidth","tableWrapper","overflowX","EnhancedTable","defaultData","_React$useState","React","useState","_React$useState2","slicedToArray","setOrder","_React$useState3","_React$useState4","setOrderBy","_React$useState5","_React$useState6","selected","setSelected","_React$useState7","_React$useState8","rows","setRows","updateFilepath","pathArr","temp","data","find","c","child","useEffect","Paper","FileToolbar","Table","aria-labelledby","size","src_EnhancedTableHead","target","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","isItemSelected","indexOf","labelId","concat","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","handleCheckBoxClick","component","scope","newFilepath","toConsumableArray","handleClick","Cancel","styled","Button","_templateObject","position","background","boxShadow","shadows","outline","top","left","transform","button","margin","Actions","open","setOpen","setType","setName","updateRow","handleOpen","handleClose","Fragment","Modal","aria-describedby","onClose","TextField","value","e","Wrapper","div","Layout_templateObject","FilesWrapper","_templateObject2","ActionsWrapper","_templateObject3","defaultRows","Layout","validateNewData","filterRows","arr","i","splice","newRows","push","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d61e5b7a.chunk.js","sourcesContent":["import React from 'react';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport clsx from 'clsx';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected, filepath, setFilepath, removeSelectedItems } = props;\n\n  function updatePath(idx) {\n    if (idx === 0) {\n      setFilepath([])\n    } else if (filepath.length !== idx) {\n      setFilepath(filepath.slice(0, idx))\n    }\n  }\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            <span onClick={() => updatePath(0)}>Root</span>\n            {filepath.map((name, idx) => (\n              <span key={name}>\n                &nbsp;\n                >\n                &nbsp;\n                <span onClick={() => updatePath(idx + 1)}>{name}</span>\n              </span>\n            ))}\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 && (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"Delete\" onClick={removeSelectedItems}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  filepath: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setFilepath: PropTypes.func.isRequired,\n};\n\nexport default EnhancedTableToolbar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nconst headRows = [\n  { id: 'name', label: 'Name' },\n  { id: 'type', label: 'Type' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'Select all desserts' }}\n          />\n        </TableCell>\n        {headRows.map(row => (\n          <TableCell\n            key={row.id}\n            sortDirection={orderBy === row.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === row.id}\n              direction={order}\n              onClick={createSortHandler(row.id)}\n            >\n              {row.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FileToolbar from './FileToolbar';\nimport EnhancedTableHead from './EnhancedTableHead';\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function EnhancedTable(props) {\n  const { filepath, setFilepath, removeSelectedItems, defaultData } = props;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [rows, setRows] = React.useState(defaultData);\n\n  React.useEffect(() => {\n    updateFilepath(filepath);\n  })\n\n  function handleRemoveSelectedItems() {\n    removeSelectedItems(selected);\n    setSelected([]);\n  }\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }\n\n  function handleClick(event, row) {\n    if (row.type === 'folder') {\n      setRows(row.child);\n      const newFilepath = [...filepath, row.name];\n      setFilepath(newFilepath);\n    }\n  }\n\n  function handleCheckBoxClick(event, name) {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  }\n\n  function updateFilepath(pathArr) {\n    if (pathArr.length === 0) {\n      setRows(defaultData);\n    } else {\n      let temp = defaultData;\n      pathArr.map((name) => {\n        const data = temp.find(c => c.name === name)\n        if (data) {\n          temp = data.child;\n        }\n        return name;\n      })\n      setRows(temp);\n    }\n    setFilepath(pathArr);\n  }\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <FileToolbar\n          filepath={filepath}\n          numSelected={selected.length}\n          setFilepath={updateFilepath}\n          removeSelectedItems={handleRemoveSelectedItems}\n        />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size='medium'\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          onClick={event => handleCheckBoxClick(event, row.name)}\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\" onClick={event => handleClick(event, row)}>\n                        {row.name}\n                      </TableCell>\n                      <TableCell>{row.type}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nEnhancedTable.propTypes = {\n  filepath: PropTypes.array.isRequired,\n  setFilepath: PropTypes.func.isRequired,\n  removeSelectedItems: PropTypes.func.isRequired,\n  defaultData: PropTypes.array.isRequired,\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\n\nconst Cancel = styled(Button)`\n  &&& {\n    margin-left: 10px;\n  }\n`\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: 'none',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  button: {\n    margin: `${theme.spacing(1)}px 0`,\n    width: '100%',\n  },\n}));\n\nexport default (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [type, setType] = React.useState('folder');\n    const [name, setName] = React.useState();\n    const {updateRow} = props;\n\n    const handleOpen = (type) => {\n      setOpen(true);\n      setType(type);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n    \n    const handleSave = () => {\n      if (!name) {\n        return;\n      }\n      \n      if (type === 'folder') {\n        updateRow({\n          type: 'folder',\n          name,\n          child: []\n        })\n      } else {\n        updateRow({\n          type: 'file',\n          name,\n        })\n      }\n      setName();\n      handleClose();\n    }\n   \n\n    return (\n      <>\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => handleOpen('folder')}>New folder</Button>\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => handleOpen('file')}>New file</Button>\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={open}\n          onClose={handleClose}\n        >\n          <div className={classes.paper}>\n            <Typography variant=\"h6\" id=\"modal-title\">\n              Input a {type} name\n            </Typography>\n            <TextField\n              id=\"outlined-name\"\n              label=\"Name\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <div>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>Save</Button>\n              <Cancel variant=\"contained\" onClick={handleClose}>Cancel</Cancel>\n            </div>\n          </div>\n        </Modal>\n      </>\n    )\n  }","import React from 'react';\nimport styled from 'styled-components';\nimport Files from './Files';\nimport Actions from './Actions';\n\nconst Wrapper = styled.div`\n  max-width: 1440px;\n  padding: 20px 0;\n  width: 100%;\n  margin: auto;\n  display: flex;\n`\n\nconst FilesWrapper = styled.div`\n  flex: 1;\n`\n\nconst ActionsWrapper = styled.div`\n  width: 300px;\n  padding: 0 20px;\n  box-sizing: border-box;\n`\nconst defaultRows = [\n  {\n    type: 'folder',\n    name: 'Documents',\n    child: [{\n      type: 'folder',\n      name: 'Photos',\n      child: []\n    }]\n  },\n  {\n    type: 'folder',\n    name: 'Downloads',\n    child: []\n  }\n];\n\nexport default () => {\n  const [rows, setRows] = React.useState(defaultRows);\n  const [filepath, setFilepath] = React.useState([]);\n\n  const validateNewData = (rows, data) => {\n    return !rows.find(row => (row.name === data.name && row.type === data.type))\n  }\n\n  const updateRow = (data) => {\n    if (filepath.length === 0) {\n      if (validateNewData(rows, data)) {\n        setRows([...rows, data]);\n      }\n    } else {\n      let newRows = [...rows];\n      let temp = newRows;\n      filepath.map((name) => {\n        const data = temp.find(c => c.name === name);\n        if (data) {\n          temp = data.child;\n        }\n        return name;\n      })\n      if (temp && validateNewData(temp, data)) {\n        temp.push(data);\n      }\n      setRows(newRows);\n    }\n  }\n\n  const filterRows = (arr, selected) => {\n    for( let i = 0; i < arr.length; i++) { \n      if ( selected.indexOf(arr[i].name) !== -1 ) {\n        arr.splice(i, 1); \n        i--;\n      }\n   }\n  }\n\n  const handleRemoveSelectedItems = (selected) => {\n    if (filepath.length === 0) {\n      const newRows = [...rows];\n      filterRows(newRows, selected)\n      setRows(newRows);\n    } else {\n      let newRows = rows;\n      let temp = [...newRows];\n      filepath.map((name) => {\n        const data = temp.find(c => c.name === name)\n        if (data) {\n          temp = data.child;\n        }\n        return name;\n      })\n      if (temp) {\n        filterRows(temp, selected)\n      }\n      setRows(newRows);\n    }\n  }\n  return (\n    <Wrapper>\n      <FilesWrapper>\n        <Files\n          defaultData={rows}\n          setFilepath={setFilepath}\n          filepath={filepath}\n          removeSelectedItems={handleRemoveSelectedItems}\n        />\n      </FilesWrapper>\n      <ActionsWrapper>\n        <Actions\n          updateRow={updateRow}\n        />\n      </ActionsWrapper>\n    </Wrapper>\n  )\n}","import React from 'react';\nimport './App.css';\nimport Layout from './Layout';\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}